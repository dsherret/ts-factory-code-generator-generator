import * as ts from "typescript-4.9.4";

const factory = ts.factory;
[
  factory.createInterfaceDeclaration(
    [factory.createToken(ts.SyntaxKind.ExportKeyword)],
    factory.createIdentifier("Interface"),
    undefined,
    undefined,
    [
      factory.createPropertySignature(
        undefined,
        factory.createIdentifier("prop"),
        undefined,
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword)
      ),
      factory.createPropertySignature(
        [factory.createToken(ts.SyntaxKind.ReadonlyKeyword)],
        factory.createIdentifier("readonlyProp"),
        undefined,
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword)
      ),
      factory.createIndexSignature(
        undefined,
        [factory.createParameterDeclaration(
          undefined,
          undefined,
          factory.createIdentifier("test"),
          undefined,
          factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
          undefined
        )],
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword)
      )
    ]
  ),
  factory.createInterfaceDeclaration(
    undefined,
    factory.createIdentifier("OtherInterface"),
    undefined,
    undefined,
    [
      factory.createMethodSignature(
        undefined,
        factory.createIdentifier("method"),
        undefined,
        undefined,
        [factory.createParameterDeclaration(
          undefined,
          undefined,
          factory.createIdentifier("p"),
          undefined,
          factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
          undefined
        )],
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword)
      ),
      factory.createConstructSignature(
        undefined,
        [factory.createParameterDeclaration(
          undefined,
          undefined,
          factory.createIdentifier("p"),
          undefined,
          factory.createKeywordTypeNode(ts.SyntaxKind.NumberKeyword),
          undefined
        )],
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword)
      )
    ]
  ),
  factory.createClassDeclaration(
    undefined,
    factory.createIdentifier("Class"),
    undefined,
    undefined,
    [
      factory.createPropertyDeclaration(
        undefined,
        factory.createIdentifier("prop"),
        factory.createToken(ts.SyntaxKind.ExclamationToken),
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
        undefined
      ),
      factory.createConstructorDeclaration(
        undefined,
        [factory.createParameterDeclaration(
          undefined,
          undefined,
          factory.createIdentifier("testing"),
          undefined,
          factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
          undefined
        )],
        factory.createBlock(
          [],
          true
        )
      ),
      factory.createMethodDeclaration(
        undefined,
        undefined,
        factory.createIdentifier("method"),
        undefined,
        undefined,
        [],
        undefined,
        factory.createBlock(
          [factory.createReturnStatement(factory.createNumericLiteral("5"))],
          true
        )
      )
    ]
  ),
  factory.createClassDeclaration(
    [factory.createToken(ts.SyntaxKind.DeclareKeyword)],
    factory.createIdentifier("Class2"),
    undefined,
    undefined,
    [
      factory.createPropertyDeclaration(
        [factory.createToken(ts.SyntaxKind.ReadonlyKeyword)],
        factory.createIdentifier("other"),
        undefined,
        factory.createUnionTypeNode([
          factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
          factory.createKeywordTypeNode(ts.SyntaxKind.VoidKeyword)
        ]),
        undefined
      ),
      factory.createMethodDeclaration(
        undefined,
        undefined,
        factory.createIdentifier("method"),
        undefined,
        undefined,
        [factory.createParameterDeclaration(
          undefined,
          undefined,
          factory.createIdentifier("p"),
          undefined,
          factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
          undefined
        )],
        factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
        undefined
      )
    ]
  ),
  factory.createVariableStatement(
    undefined,
    factory.createVariableDeclarationList(
      [factory.createVariableDeclaration(
        factory.createIdentifier("myVar"),
        undefined,
        undefined,
        factory.createNumericLiteral("6")
      )],
      ts.NodeFlags.Const
    )
  ),
  factory.createVariableStatement(
    undefined,
    factory.createVariableDeclarationList(
      [
        factory.createVariableDeclaration(
          factory.createIdentifier("myVar2"),
          undefined,
          undefined,
          factory.createNumericLiteral("6")
        ),
        factory.createVariableDeclaration(
          factory.createIdentifier("myVar3"),
          undefined,
          factory.createUnionTypeNode([
            factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
            factory.createKeywordTypeNode(ts.SyntaxKind.UndefinedKeyword)
          ]),
          undefined
        )
      ],
      ts.NodeFlags.Let
    )
  ),
  factory.createVariableStatement(
    undefined,
    factory.createVariableDeclarationList(
      [factory.createVariableDeclaration(
        factory.createIdentifier("otherVar"),
        undefined,
        undefined,
        factory.createBinaryExpression(
          factory.createNumericLiteral("4"),
          factory.createToken(ts.SyntaxKind.PlusToken),
          factory.createBinaryExpression(
            factory.createNumericLiteral("5"),
            factory.createToken(ts.SyntaxKind.AsteriskToken),
            factory.createNumericLiteral("12")
          )
        )
      )],
      ts.NodeFlags.None
    )
  ),
  factory.createFunctionDeclaration(
    undefined,
    undefined,
    factory.createIdentifier("Function"),
    undefined,
    [factory.createParameterDeclaration(
      undefined,
      undefined,
      factory.createIdentifier("p"),
      undefined,
      factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword),
      undefined
    )],
    factory.createKeywordTypeNode(ts.SyntaxKind.NumberKeyword),
    factory.createBlock(
      [factory.createReturnStatement(factory.createNumericLiteral("5"))],
      true
    )
  ),
  factory.createFunctionDeclaration(
    undefined,
    undefined,
    factory.createIdentifier("test"),
    undefined,
    [],
    undefined,
    factory.createBlock(
      [],
      false
    )
  )
];
